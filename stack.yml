version: "3"
services:
  traefik:
    image: traefik
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
    - 8030:80
    - 8080:8080
    networks:
      - traefik-public
    command:
      - --api.insecure=true
      - --providers.docker
      - --providers.docker.swarmMode=true
      - --entrypoints.web.address=:80
      - --providers.file.watch=true
      - --providers.docker.network=traefik-public
    deploy:
      labels:
        - traefik.enable=true
        - traefik.http.routers.api.rule=Host(`demoapp.local`)
        - traefik.http.routers.api.service=api@internal
      placement:
        constraints:
          - node.role == manager
  nginx:
    image: nginx
    volumes:
      - ./default.conf:/etc/nginx/conf.d/default.conf
      - .:/var/www/html
    ports:
      - 8021:80
    networks:
      - traefik-public
    depends_on:
      - php
    deploy:
      mode: replicated
      replicas: 2
      labels:
        - traefik.enable=true
        - traefik.http.routers.demoapp.rule=Host(`demoapp.local`)
        - traefik.http.routers.demoapp.entrypoints=web
        - traefik.http.services.demoapp.loadbalancer.server.port=80
  php:
    image: php:7.4-fpm-alpine
    volumes:
      - .:/var/www/html
    networks:
      - traefik-public
    deploy:
      mode: replicated
      replicas: 2

networks:
  traefik-public:
     external: true
